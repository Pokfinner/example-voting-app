apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: voting-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 5432
          env:
          - name: POSTGRES_USER
            value: "postgres"
          - name: POSTGRES_PASSWORD
            value: "postgres"
          volumeMounts:
          - name: postgres-data
            mountPath: /var/lib/postgresql/data
          - name: healthchecks
            mountPath: users/ghenadie/desktop/voting_app_solution/example-voting-app/healthchecks
            livenessProbe:
              exec:
                command:
                - /healthchecks/postgres.sh
              initialDelaySeconds: 10
              periodSeconds: 5
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: healthchecks
          hostPath:
            path: users/ghenadie/desktop/voting_app_solution/example-voting-app/healthchecks

---
apiVersion: v1
kind: Service
metadata:
  name: db-svc
  namespace: voting-app
spec:
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP


