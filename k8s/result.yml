apiVersion: apps/v1
kind: Deployment
metadata:
  name: result
  namespace: voting-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result
  template:
    metadata:
      labels:
        app: result
    spec:
      containers:
      - name: result
        image: ghenac/voting-app-result:latest
        imagePullPolicy: IfNotPresent
        env:
          - name: PG_HOST
            value: "db-svc"
          - name: PG_PORT
            value: "5432"
          - name: PG_USERNAME
            value: "postgres"
          - name: PG_PASSWORD
            value: "postgres"
          - name: PG_DATABASE
            value: "postgres"
        command: ["nodemon", "--inspect=0.0.0.0", "server.js"]
        ports:
          - containerPort: 80
        volumeMounts:
          - name: result-source
            mountPath: /app
      volumes:
        - name: result-source
          hostPath:
            path: /users/ghenadie/desktop/voting_app_solution/example-voting-app/result

---
apiVersion: v1
kind: Service
metadata:
  name: result-svc
  namespace: voting-app
spec:
  selector:
    app: result
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 80
  type: LoadBalancer

